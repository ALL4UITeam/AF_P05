{"version":3,"file":"index.js","sources":["../../../src/js/main.js"],"sourcesContent":["import '@/scss/main.scss';\r\n\r\n(() => {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n\r\n        const accordions = document.querySelectorAll('.accordion');\r\n    \r\n        \r\n        accordions.forEach(accordion => {\r\n            const header = accordion.querySelector('.accordion__header');\r\n            const arrow = accordion.querySelector('.accordion__arrow');\r\n            \r\n            if (header) {\r\n                header.addEventListener('click', function(e) {\r\n                    // 체크박스 클릭 시 아코디언 토글 방지\r\n                    if (e.target.type === 'checkbox' || e.target.closest('.label-checkbox')) {\r\n                        return;\r\n                    }\r\n                    \r\n                    const isOpen = accordion.classList.contains('is-open');\r\n                    \r\n                    // 모든 아코디언 닫기\r\n                    accordions.forEach(acc => {\r\n                        acc.classList.remove('is-open');\r\n                        const accArrow = acc.querySelector('.accordion__arrow');\r\n                        if (accArrow) {\r\n                            accArrow.setAttribute('aria-expanded', 'false');\r\n                        }\r\n                    });\r\n                    \r\n                    // 클릭된 아코디언 열기\r\n                    if (!isOpen) {\r\n                        accordion.classList.add('is-open');\r\n                        if (arrow) {\r\n                            arrow.setAttribute('aria-expanded', 'true');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            \r\n           \r\n        });\r\n        \r\n        const navList = document.querySelector('.nav__list');\r\n        const closeBtns = document.querySelectorAll('.header__close-btn');\r\n        const toggleBtn = document.querySelector('.panel__toggle');\r\n        const panels = document.querySelectorAll('.viewer-app__panel');\r\n        const contentItems = document.querySelectorAll('.panel--viewer__con__item');\r\n\r\n        // helper functions\r\n        const resetToggle = () => {\r\n            if (!toggleBtn) return;\r\n            toggleBtn.classList.remove('is-collapsed');\r\n            toggleBtn.setAttribute('aria-expanded', 'true');\r\n            toggleBtn.setAttribute('aria-label', '패널 닫기');\r\n        };\r\n        const updateToggle = () => {\r\n            const active = document.querySelector('.viewer-app__panel.is-active');\r\n            if (!toggleBtn) return;\r\n            toggleBtn.classList.toggle('is-hidden', !active);\r\n            toggleBtn.setAttribute('aria-hidden', String(!active));\r\n        };\r\n        const hidePanels = () => panels.forEach(p => p.classList.remove('is-active', 'is-collapsed'));\r\n        const clearNav = () => document.querySelectorAll('.nav__item--active')\r\n            .forEach(item => item.classList.remove('nav__item--active'));\r\n\r\n        // 네비게이션 클릭 시 패널 전환\r\n        navList?.addEventListener('click', e => {\r\n            const link = e.target.closest('.nav__link');\r\n            if (!link) return;\r\n            e.preventDefault();\r\n            const target = link.dataset.target;\r\n\r\n            clearNav();\r\n            link.parentElement.classList.add('nav__item--active');\r\n            link.setAttribute('aria-current', 'page');\r\n\r\n            hidePanels();\r\n            document.querySelector(`.viewer-app__panel[data-panel=\"${target}\"]`)?.classList.add('is-active');\r\n\r\n            resetToggle();\r\n            updateToggle();\r\n        });\r\n\r\n        // 닫기 버튼 클릭 시 패널 닫기\r\n        closeBtns.forEach(btn => btn.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            hidePanels();\r\n            clearNav();\r\n            resetToggle();\r\n            updateToggle();\r\n        }));\r\n\r\n        // 공통 토글 버튼으로 패널 접기/펼치기\r\n        toggleBtn?.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            const active = document.querySelector('.viewer-app__panel.is-active');\r\n            if (!active) return;\r\n            const collapsed = active.classList.toggle('is-collapsed');\r\n            toggleBtn.classList.toggle('is-collapsed', collapsed);\r\n            toggleBtn.setAttribute('aria-expanded', String(!collapsed));\r\n            toggleBtn.setAttribute('aria-label', collapsed ? '패널 열기' : '패널 닫기');\r\n        });\r\n\r\n        // 콘텐츠 아이템 클릭 시 해당 패널로 이동\r\n        contentItems.forEach(item => {\r\n            item.addEventListener('click', e => {\r\n                e.preventDefault();\r\n                const target = item.dataset.target;\r\n                if (!target) return;\r\n\r\n                // 네비게이션 상태 업데이트\r\n                clearNav();\r\n                document.querySelectorAll('.nav__link').forEach(link => {\r\n                    if (link.dataset.target === target) {\r\n                        link.parentElement.classList.add('nav__item--active');\r\n                        link.setAttribute('aria-current', 'page');\r\n                    }\r\n                });\r\n\r\n                // 패널 표시 전환\r\n                hidePanels();\r\n                document.querySelector(`.viewer-app__panel[data-panel=\"${target}\"]`)?.classList.add('is-active');\r\n\r\n                resetToggle();\r\n                updateToggle();\r\n            });\r\n        });\r\n\r\n        // 초기 토글 버튼 상태 설정\r\n        updateToggle();\r\n    });\r\n})();\r\n\r\n// 공통 탭\r\ndocument.querySelectorAll('.tab-group').forEach(tabGroup => {\r\n    const tabs = tabGroup.querySelectorAll('.tab-group__tab');\r\n    // aria-controls로 연결된 패널만!  \r\n    const panels = Array.from(tabs).map(tab =>\r\n        document.getElementById(tab.getAttribute('aria-controls'))\r\n    );\r\n\r\n    function activateTab(idx, moveToPanelInput = true) {\r\n        tabs.forEach((tab, i) => {\r\n            tab.classList.toggle('tab-group__tab--selected', i === idx);\r\n            tab.setAttribute('aria-selected', i === idx ? 'true' : 'false');\r\n            tab.tabIndex = i === idx ? 0 : -1;\r\n        });\r\n        panels.forEach((panel, i) => {\r\n            panel.hidden = i !== idx;\r\n            if (i === idx && moveToPanelInput) {\r\n                // 아래는 첫번째 폼 포커스(선택, input 등) \r\n                const focusable = panel.querySelector('select, input, textarea, button, [tabindex]:not([tabindex=\"-1\"])');\r\n                if (focusable) focusable.focus();\r\n            }\r\n        });\r\n        tabs[idx].focus();\r\n    }\r\n\r\n    tabs.forEach((tab, idx) => {\r\n        tab.addEventListener('click', () => activateTab(idx));\r\n        tab.addEventListener('keydown', (e) => {\r\n            let dir = 0;\r\n            if (e.key === 'ArrowRight') dir = 1;\r\n            else if (e.key === 'ArrowLeft') dir = -1;\r\n            else if (e.key === 'Home') dir = -999;\r\n            else if (e.key === 'End') dir = 999;\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                activateTab(idx, true);\r\n                e.preventDefault();\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n            let nextIdx;\r\n            if (dir === -999) nextIdx = 0;\r\n            else if (dir === 999) nextIdx = tabs.length - 1;\r\n            else nextIdx = (idx + dir + tabs.length) % tabs.length;\r\n            activateTab(nextIdx, false);\r\n            e.preventDefault();\r\n        });\r\n    });\r\n\r\n    // 최초 활성 탭 세팅(첫 번째)\r\n    activateTab(0, false);\r\n});\r\n\r\n\r\n// 카드 활성화\r\ndocument.querySelectorAll('.observation-card').forEach(card => {\r\n    const checkBtn = card.querySelector('.observation-card__check-btn');\r\n    const content = card.querySelector('.observation-card__content');\r\n    const radios = card.querySelectorAll('.observation-card__radio');\r\n    let active = false; // 카드별 활성상태\r\n\r\n    function updateState() {\r\n        if (active) {\r\n            card.classList.add('active');\r\n            checkBtn.setAttribute('aria-pressed', 'true');\r\n            radios.forEach(r => r.disabled = false);\r\n            content.setAttribute('aria-hidden', 'false');\r\n        } else {\r\n            card.classList.remove('active');\r\n            checkBtn.setAttribute('aria-pressed', 'false');\r\n            radios.forEach(r => r.disabled = true);\r\n            content.setAttribute('aria-hidden', 'true');\r\n        }\r\n    }\r\n\r\n    // 최초 상태\r\n    updateState();\r\n\r\n    function toggleCardActive() {\r\n        active = !active;\r\n        updateState();\r\n    }\r\n\r\n    checkBtn.addEventListener('click', toggleCardActive);\r\n    checkBtn.addEventListener('keydown', e => {\r\n        if (e.key === ' ' || e.key === 'Enter') {\r\n            e.preventDefault();\r\n            toggleCardActive();\r\n        }\r\n    });\r\n});\r\n\r\n///슬라이더\r\nconst sliders = document.querySelectorAll('.custom-slider');\r\n\r\nfunction setSliderTrackAndValue(el) {\r\n    const min = +el.min;\r\n    const max = +el.max;\r\n    const val = +el.value;\r\n    const percent = ((val - min) / (max - min)) * 100;\r\n    const grad = `linear-gradient(to right, #444 ${percent}%, #e6e6e6 ${percent}%)`;\r\n    el.style.background = grad;\r\n    // value 표기 업데이트\r\n    const valueSpan = el.parentElement.querySelector('.slider-value');\r\n    if (valueSpan) valueSpan.textContent = val;\r\n}\r\n\r\nsliders.forEach(slider => {\r\n    setSliderTrackAndValue(slider); // 초기\r\n    slider.addEventListener('input', () => setSliderTrackAndValue(slider));\r\n});\r\n\r\nconst input = document.getElementById('fileInput1');\r\nconst fileList = document.getElementById('fileList1');\r\n\r\n// 파일 리스트 랜더 함수\r\nfunction renderFileList(files) {\r\n    fileList.innerHTML = '';\r\n    Array.from(files).forEach((file, idx) => {\r\n        const li = document.createElement('li');\r\n        li.className = 'step-filelist__item';\r\n\r\n        // 파일명\r\n        const nameSpan = document.createElement('span');\r\n        nameSpan.className = 'step-filelist__name';\r\n        nameSpan.textContent = file.name;\r\n\r\n        // 삭제버튼\r\n        const removeBtn = document.createElement('button');\r\n        removeBtn.type = 'button';\r\n        removeBtn.className = 'step-filelist__remove';\r\n        removeBtn.setAttribute('aria-label', `파일 ${file.name} 삭제`);\r\n        removeBtn.textContent = '×';\r\n\r\n        removeBtn.addEventListener('click', () => {\r\n            // 새 FileList 생성(삭제)\r\n            const dt = new DataTransfer();\r\n            Array.from(input.files).forEach((f, i) => { if (i !== idx) dt.items.add(f); });\r\n            input.files = dt.files;\r\n            renderFileList(input.files);\r\n        });\r\n\r\n        li.appendChild(nameSpan);\r\n        li.appendChild(removeBtn);\r\n        fileList.appendChild(li);\r\n    });\r\n}\r\n\r\n// input에 change 이벤트\r\ninput.addEventListener('change', () => {\r\n    renderFileList(input.files);\r\n});\r\n"],"names":[],"mappings":"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"}